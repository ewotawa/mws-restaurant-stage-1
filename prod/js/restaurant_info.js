"use strict";var map,restaurant=void 0,key=config.googleMapApi;function fetchRestaurantsAll(e){return e}function fetchUniqueRestaurant(e){var t=e,n=getParameterByName("id");if(n)return t=t.filter(function(e){return e.id==n}),restaurant=t[0]}if(window.initMap=function(){if(navigator.serviceWorker){idb.open("mwsStage2",1,function(e){switch(e.oldVersion){case 0:e.createObjectStore("mwsData",{keyPath:"id"})}}).then(function(e){return e.transaction("mwsData","readonly").objectStore("mwsData").getAll()}).then(fetchUniqueRestaurant).then(e).catch(function(e){return console.error(e)})}else fetch(DBHelper.DATABASE_URL,{}).then(function(e){return e.json()}).then(fetchRestaurantsAll).then(fetchUniqueRestaurant).then(e).catch(function(e){return console.error(e)});function e(e){self.map=new google.maps.Map(document.getElementById("map"),{zoom:16,center:e.latlng,scrollwheel:!1}),fillBreadcrumb(),DBHelper.mapMarkerForRestaurant(self.restaurant,self.map)}},navigator.serviceWorker){var getRestaurant=function(){dbPromise.then(function(e){return e.transaction("mwsData","readonly").objectStore("mwsData").getAll()}).then(fetchUniqueRestaurant).then(fetchUniqueRestHTML).catch(function(e){return console.error(e)})},dbPromise=idb.open("mwsStage2",1,function(e){switch(e.oldVersion){case 0:e.createObjectStore("mwsData",{keyPath:"id"})}});getRestaurant()}else fetch(DBHelper.DATABASE_URL,{}).then(function(e){return e.json()}).then(fetchRestaurantsAll).then(fetchUniqueRestaurant).then(fetchUniqueRestHTML).catch(function(e){return console.error(e)});function fetchUniqueRestHTML(e){self.restaurant=e,fillRestaurantHTML()}function addApiKey(){if(""==key)var e="";else e="key="+config.googleMapApi+"&";document.getElementById("googleApi").setAttribute("src","https://maps.googleapis.com/maps/api/js?"+e+"libraries=places&callback=initMap")}fillRestaurantHTML=function(){var e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:self.restaurant;document.getElementById("restaurant-name").innerHTML=e.name,document.getElementById("restaurant-address").innerHTML=e.address;var t=document.getElementById("restaurant-img");t.className="restaurant-img",t.src=DBHelper.imageUrlForRestaurant(e),t.setAttribute("alt","promotional photo for "+e.name),document.getElementById("restaurant-cuisine").innerHTML=e.cuisine_type,e.operating_hours&&fillRestaurantHoursHTML(),fillReviewsHTML()},fillRestaurantHoursHTML=function(){var e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:self.restaurant.operating_hours,t=document.getElementById("restaurant-hours");for(var n in e){var r=document.createElement("tr"),a=document.createElement("td");a.innerHTML=n,r.appendChild(a);var i=document.createElement("td");i.innerHTML=e[n],r.appendChild(i),t.appendChild(r)}},fillReviewsHTML=function(){var e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:self.restaurant.reviews,t=document.getElementById("reviews-container"),n=document.createElement("h2");if(n.innerHTML="Reviews",t.appendChild(n),!e){var r=document.createElement("p");return r.innerHTML="No reviews yet!",void t.appendChild(r)}var a=document.getElementById("reviews-list");e.forEach(function(e){a.appendChild(createReviewHTML(e))}),t.appendChild(a)},createReviewHTML=function(e){var t=document.createElement("li");t.setAttribute("class","reviewListing");var n=document.createElement("p");n.innerHTML=e.name,n.setAttribute("class","reviewName"),t.appendChild(n);var r=document.createElement("p");r.innerHTML=e.date,r.setAttribute("class","reviewDate"),t.appendChild(r);var a=document.createElement("p");a.innerHTML="Rating: "+e.rating,a.setAttribute("class","reviewRating"),t.appendChild(a);var i=document.createElement("p");return i.innerHTML=e.comments,i.setAttribute("class","reviewComments"),t.appendChild(i),t},fillBreadcrumb=function(){var e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:self.restaurant,t=document.getElementById("breadcrumb"),n=document.createElement("li");n.innerHTML=e.name,t.appendChild(n)},getParameterByName=function(e,t){t||(t=window.location.href),e=e.replace(/[\[\]]/g,"\\$&");var n=new RegExp("[?&]"+e+"(=([^&#]*)|&|#|$)").exec(t);return n?n[2]?decodeURIComponent(n[2].replace(/\+/g," ")):"":null},document.addEventListener("DOMContentLoaded",function(){console.log("ready!"),addApiKey()});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
