"use strict";console.log("this is the service worker"),importScripts("https://storage.googleapis.com/workbox-cdn/releases/3.6.1/workbox-sw.js"),workbox?console.log("WorkBox is loaded."):console.log("WorkBox is NOT loaded."),workbox.routing.registerRoute(new RegExp(".*.*"),workbox.strategies.networkFirst());var showNotification=function(){self.registration.showNotification("BackgroundSync success!",{body:"ü¶Ü üêß ü¶Ü üêß"})},bgSyncPlugin=new workbox.backgroundSync.Plugin("mwsQueue",{callbacks:{queueDidReplay:showNotification}}),networkWithBackgroundSync=new workbox.strategies.NetworkOnly({plugins:[bgSyncPlugin]});workbox.routing.registerRoute("http://localhost:1337/reviews/",networkWithBackgroundSync,"POST"),workbox.routing.registerRoute("http://localhost:1337/restaurants/<restaurant_id>/?is_favorite=true",networkWithBackgroundSync,"PUT"),workbox.routing.registerRoute("http://localhost:1337/restaurants/<restaurant_id>/?is_favorite=false",networkWithBackgroundSync,"PUT"),workbox.routing.registerRoute("http://localhost:1337/restaurants/<restaurant_id>/?is_favorite=false",networkWithBackgroundSync,"PUT");
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInN3LmpzIl0sIm5hbWVzIjpbImNvbnNvbGUiLCJsb2ciLCJpbXBvcnRTY3JpcHRzIiwic2hvd05vdGlmaWNhdGlvbiIsInNlbGYiLCJyZWdpc3RyYXRpb24iLCJ3b3JrYm94Iiwic3RyYXRlZ2llcyIsIm5ldHdvcmtGaXJzdCIsIm5ldHdvcmtXaXRoQmFja2dyb3VuZFN5bmMiLCJib2R5IiwiYmdTeW5jUGx1Z2luIiwiYmFja2dyb3VuZFN5bmMiLCJQbHVnaW4iLCJyb3V0aW5nIiwicmVnaXN0ZXJSb3V0ZSIsInF1ZXVlRGlkUmVwbGF5IiwiTmV0d29ya09ubHkiLCJwbHVnaW5zIl0sIm1hcHBpbmdzIjoiYUFBQUEsUUFBQUMsSUFBQSw4QkFRSUMsY0FBYywyRUFHVkYsUUFDR0EsUUFBQUMsSUFBQSxzQkFFTkQsUUFBQUMsSUFBQSwwQkFnQlNFLFFBQUFBLFFBQUFBLGNBQ0ZDLElBQUtDLE9BQUFBLFFBRFRDLFFBQUFDLFdBQUFDLGdCQUFBLElBQU1MLGlCQUFtQixXQWNuQk0sS0FBQUEsYUFBQUEsaUJBQXdDRiwwQkFBdUIsQ0FBQUcsS0FBQSxpQkFJekVDLGFBQUEsSUFBQUwsUUFBQU0sZUFBQUMsT0FDWUMsV0FaSixDQWtCWUMsVUFBQUEsQ0FoQkpDLGVBQWdCYixvQkFrQ3BDTSwwQkFBQSxJQUFBSCxRQUFBQyxXQUFBVSxZQUFBLENBNUJVQyxRQUFTLENBQUNQLGdCQUlaTCxRQUFRUSxRQUFRQyxjQUNkLGlDQUNBTiwwQkFDQSxRQUdGSCxRQUFRUSxRQUFRQyxjQUNkLHNFQUNBTiwwQkFDQSxPQUdGSCxRQUFRUSxRQUFRQyxjQUNkLHVFQUNBTiwwQkFDQSxPQWdDVkgsUUFBQVEsUUFBQUMsY0E1QlUsdUVBQ0FOLDBCQUNBIiwiZmlsZSI6InN3LmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy9zZXJ2aWNlIHdvcmtlclxuXG5jb25zb2xlLmxvZygndGhpcyBpcyB0aGUgc2VydmljZSB3b3JrZXInKTtcblxuXG5cblxuLy8gSW1wb3J0IFdvcmtCb3hcbiAgICBpbXBvcnRTY3JpcHRzKCdodHRwczovL3N0b3JhZ2UuZ29vZ2xlYXBpcy5jb20vd29ya2JveC1jZG4vcmVsZWFzZXMvMy42LjEvd29ya2JveC1zdy5qcycpO1xuXG4gICAgaWYgKHdvcmtib3gpIHtcbiAgICAgICAgY29uc29sZS5sb2coJ1dvcmtCb3ggaXMgbG9hZGVkLicpO1xuICAgIH0gZWxzZSB7XG4gICAgICAgIGNvbnNvbGUubG9nKCdXb3JrQm94IGlzIE5PVCBsb2FkZWQuJyk7XG4gICAgfVxuXG5cblxuXG4vLyBjYWNoZSB3aXRoIFdvcmtCb3g6IG5vbi1pbWFnZSBhc3NldHNcbiAgICB3b3JrYm94LnJvdXRpbmcucmVnaXN0ZXJSb3V0ZShcbiAgICAgIG5ldyBSZWdFeHAoJy4qXFwuKicpLFxuICAgICAgd29ya2JveC5zdHJhdGVnaWVzLm5ldHdvcmtGaXJzdCgpXG4gICAgKTtcblxuXG5cblxuLy8gV29ya0JveCBCYWNrZ3JvdW5kIFN5bmNcbiAgICAvLyBjcmVhdGUgYSBub3RpZmljYXRpb24gdG8gc2hvdyB0aGF0IHRoZSBxdWV1ZSBpcyB3b3JraW5nLlxuICAgICAgICBjb25zdCBzaG93Tm90aWZpY2F0aW9uID0gKCkgPT4ge1xuICAgICAgICAgICAgc2VsZi5yZWdpc3RyYXRpb24uc2hvd05vdGlmaWNhdGlvbignQmFja2dyb3VuZFN5bmMgc3VjY2VzcyEnLCB7Ym9keTogJ/CfpoYg8J+QpyDwn6aGIPCfkKcnfSk7XG4gICAgICAgIH07XG5cbiAgICAvLyBjcmVhdGUgYSBxdWV1ZSB0aGF0IHJlcHJlc2VudHMgZmFpbGVkIEhUVFAgcmVxdWVzdHMuIFxuICAgICAgICBjb25zdCBiZ1N5bmNQbHVnaW4gPSBuZXcgd29ya2JveC5iYWNrZ3JvdW5kU3luYy5QbHVnaW4oXG4gICAgICAgICAgICAnbXdzUXVldWUnLCBcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBjYWxsYmFja3M6IHtcbiAgICAgICAgICAgICAgICAgICAgcXVldWVEaWRSZXBsYXk6IHNob3dOb3RpZmljYXRpb25cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICk7XG5cbiAgICAgICAgY29uc3QgbmV0d29ya1dpdGhCYWNrZ3JvdW5kU3luYyA9IG5ldyB3b3JrYm94LnN0cmF0ZWdpZXMuTmV0d29ya09ubHkoe1xuICAgICAgICAgIHBsdWdpbnM6IFtiZ1N5bmNQbHVnaW5dLFxuICAgICAgICB9KTtcblxuICAgIC8vIHBsdWdpbiBpcyBhZGRlZCB0byB0aGUgY29uZmlndXJhdGlvbiBvZiBoYW5kbGVyIG5ldHdvcmtXaXRoQmFja2dyb3VuZFN5bmNcbiAgICAgICAgd29ya2JveC5yb3V0aW5nLnJlZ2lzdGVyUm91dGUoXG4gICAgICAgICAgJ2h0dHA6Ly9sb2NhbGhvc3Q6MTMzNy9yZXZpZXdzLycsXG4gICAgICAgICAgbmV0d29ya1dpdGhCYWNrZ3JvdW5kU3luYyxcbiAgICAgICAgICAnUE9TVCdcbiAgICAgICAgKTtcblxuICAgICAgICB3b3JrYm94LnJvdXRpbmcucmVnaXN0ZXJSb3V0ZShcbiAgICAgICAgICAnaHR0cDovL2xvY2FsaG9zdDoxMzM3L3Jlc3RhdXJhbnRzLzxyZXN0YXVyYW50X2lkPi8/aXNfZmF2b3JpdGU9dHJ1ZScsXG4gICAgICAgICAgbmV0d29ya1dpdGhCYWNrZ3JvdW5kU3luYyxcbiAgICAgICAgICAnUFVUJ1xuICAgICAgICApO1xuXG4gICAgICAgIHdvcmtib3gucm91dGluZy5yZWdpc3RlclJvdXRlKFxuICAgICAgICAgICdodHRwOi8vbG9jYWxob3N0OjEzMzcvcmVzdGF1cmFudHMvPHJlc3RhdXJhbnRfaWQ+Lz9pc19mYXZvcml0ZT1mYWxzZScsXG4gICAgICAgICAgbmV0d29ya1dpdGhCYWNrZ3JvdW5kU3luYyxcbiAgICAgICAgICAnUFVUJ1xuICAgICAgICApO1xuXG4gICAgICAgIHdvcmtib3gucm91dGluZy5yZWdpc3RlclJvdXRlKFxuICAgICAgICAgICdodHRwOi8vbG9jYWxob3N0OjEzMzcvcmVzdGF1cmFudHMvPHJlc3RhdXJhbnRfaWQ+Lz9pc19mYXZvcml0ZT1mYWxzZScsXG4gICAgICAgICAgbmV0d29ya1dpdGhCYWNrZ3JvdW5kU3luYyxcbiAgICAgICAgICAnUFVUJ1xuICAgICAgICApO1xuXG4vLyBDb25zb2xlIGxvZ3MgZm9yIHNlcnZpY2Ugd29ya2VyIGV2ZW50c1xuXG4vKiBbYV1cblxuc2VsZi5hZGRFdmVudExpc3RlbmVyKCdpbnN0YWxsJywgZnVuY3Rpb24oZXZlbnQpIHtcbiAgICBjb25zb2xlLmxvZygnc2VydmljZSB3b3JrZXIgaW5zdGFsbGluZycpO1xuICAgIC8vcGVyZm9ybSBpbnN0YWxsIHN0ZXBzXG4gICAgZXZlbnQud2FpdFVudGlsKFxuICAgICAgICBjYWNoZXMub3BlbihDQUNIRV9OQU1FKVxuICAgICAgICAgICAgLnRoZW4oZnVuY3Rpb24oY2FjaGUpIHtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygnT3BlbmVkIGNhY2hlJyk7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGNhY2hlLmFkZEFsbCh1cmxzVG9DYWNoZSk7XG4gICAgICAgICAgICB9KVxuICAgICk7XG59KTtcblxuc2VsZi5hZGRFdmVudExpc3RlbmVyKCdhY3RpdmF0ZScsIGZ1bmN0aW9uKGV2ZW50KSB7XG4gICAgY29uc29sZS5sb2coJ3NlcnZpY2Ugd29ya2VyIGFjdGl2YXRpbmcnKTtcbn0pO1xuXG5bYV0gKi9cblxuLy8gYWRkIGVsZW1lbnRzIHRvIHRoZSBjYWNoZSB3aGVuIHRoZSBwYWdlJ3MgaGFzaCBjaGFuZ2VzXG4vKiBcbnNlbGYuYWRkRXZlbnRMaXN0ZW5lcignaGFzaGNoYW5nZScsIGZ1bmN0aW9uKGV2ZW50KSB7XG4gICAgY29uc29sZS5sb2coJ3dpbmRvdyBoYXNoIGhhcyBjaGFuZ2VkLiBBZGQgbmV3IGFzc2V0cyB0byB0aGUgY2FjaGUuJyk7XG4gICAgZXZlbnQud2FpdFVudGlsKFxuICAgICAgICBjYWNoZXMub3BlbihDQUNIRV9OQU1FKVxuICAgICAgICAgICAgLnRoZW4oZnVuY3Rpb24oY2FjaGUpIHtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygnT3BlbmVkIGNhY2hlJyk7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGNhY2hlLmFkZChldmVudC5yZXF1ZXN0KTtcbiAgICAgICAgICAgIH0pXG4gICAgKTtcbn0sIGZhbHNlKTtcbiovXG5cbi8qIFtiXVxuXG4vL2hhbmRsZSBmZXRjaCBldmVudHNcbnNlbGYuYWRkRXZlbnRMaXN0ZW5lcignZmV0Y2gnLCBmdW5jdGlvbihldmVudCkge1xuICAgIC8vIGFkZCBjb25zb2xlIGxvZ2dpbmcgZm9yIGV2ZW50IHJlcXVlc3RzXG4gICAgLy9jb25zb2xlLmxvZyhldmVudC5yZXF1ZXN0KTtcblxuICAgIC8vc2VydmUgc3RhdGljIGNvbnRlbnQgZnJvbSBjYWNoZVxuICAgIGV2ZW50LnJlc3BvbmRXaXRoKFxuICAgICAgICBjYWNoZXMubWF0Y2goZXZlbnQucmVxdWVzdClcbiAgICAgICAgICAgIC50aGVuKGZ1bmN0aW9uKHJlc3BvbnNlKSB7XG4gICAgICAgICAgICAgICAgLy9DYWNoZSBoaXQgLSByZXR1cm4gcmVzcG9uc2VcbiAgICAgICAgICAgICAgICBpZiAocmVzcG9uc2UpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHJlc3BvbnNlO1xuICAgICAgICAgICAgICAgIH0gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgcmV0dXJuIGZldGNoKGV2ZW50LnJlcXVlc3QpOyAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgIH1cbiAgICAgICAgKVxuICAgICk7XG59KTtcblxuW2JdICovIl19
